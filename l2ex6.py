#!python3

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами 
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

# Пример готовой структуры:
#
# [
#  (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
#  (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}), 
#  (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
# ]
#
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
#
# {
#  "название": ["компьютер", "принтер", "сканер"],
#  "цена": [20000, 6000, 2000],
#  "количество": [5, 2, 7],
#  "ед": ["шт."]
# }

# данное задание не коректно по нескольким причинам
# 1 первичная структура может быть пересобрана в конечную, но конечная в первичную не может 
# теряются связи едениц измерения
# 2 запрашивать все данные предполагает запрос номера товара, а значит он может быть любым и не обязательно идущим по порядку,
# в задании номер влияет на список внутри словаря, и отображен без разрывов, пример ввожу номера 1,3,2,100 - при таких данных
# по условию я получу отображение 1,2,3,4 - где нарушаться связи с первичной структурой, для решения этой проблемы
# надо как минимум добавлять пустые значения, а еще лучше поле id

startStruct = [
                (1, {"название": "компьютер", "цена": 20000, "количество": 5, "ед": "шт."}),
                (3, {"название": "принтер", "цена": 6000, "количество": 2, "ед": "шт."}),
                (2, {"название": "сканер", "цена": 2000, "количество": 7, "ед": "шт."})
              ]
print(startStruct)

transformStruct = {"название":list(),"цена":list(),"количество":list(),"ед":list()}

for element in startStruct:
    k = element[0]-1
    dataDict = element[1]
    for key,value in dataDict.items():
        transformStruct[key].insert(k,value)

print('Как должно быть -> \n ',transformStruct)

transformStruct['ед'] = list(set(transformStruct['ед']))
print('Как написано в задании -> \n',transformStruct)
